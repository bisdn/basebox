#!/bin/bash

# VRF creation example.
# Virtual Routing and Forwarding (VRF) allows for the separation of
# routing tables, independently processing of network paths.

# Creation of VRFs in Linux is the creation of a network device,
# which will then serve as a master to the attached interfaces.

# For more information, consult the VRF documentation inside the 
# Linux Kernel in: https://www.kernel.org/doc/Documentation/networking/vrf.txt
# FRR configuration present in: 
# https://gist.github.com/rubensfig/ef4a8663ad0c13639ffc78ac2ec62f6c

# These files will configure a bridge with VLAN 10 and 20,
# and the respective SVI interfaces (swbridge.10 and swbridge.20). 
# 
# These interfaces are then connected to one VRF (red),
# with table Id 10.
# 
# IP addresses can then be configured on the SVI's. If the interfaces are configured with an IP address
# before enslavement to the VRF, then the IP address will be lost.
# 
# The schematic for the setup is here:
# 
# +--------------------------------+
# |        +--------------+        |
# |        | RED  (VRF 2) |        |
# |        +--+-------+---+        |
# |           |       |            |
# |+----------+--+  +-+-----------+|
# || swbridge.X  |  | swbridge.Y  ||
# ||10.0.100.1/24|  |10.0.200.1/24||
# |+----+--------+  +-----+-------+|
# |     |                 |        |
# | +---+-----------------+------+ |
# | |         swbridge           | |
# | +---+-----------------+------+ |
# |     |                 |        |
# |  +--+----+         +--+----+   |
# |  |portX  |         |portY  |   |
# |  |VLAN100|         |VLAN200|   |
# |  +-------+         +-------+   |
# |                                |
# +--------------------------------+

PORTX=${PORTX:-port1}
PORTY=${PORTY:-port2}
BRIDGE=${BRIDGE:-swbridge}

VRF=${VRF:-red}
VRF_TABLE_ID=${VRF_TABLE_ID:-2}

BR_VLAN=${BR_VLAN:-100}
BR_VLAN2=${BR_VLAN2:-200}
  
SVI_IP=${SVI_IP:-10.0.100.1/24}
SVI_IP2=${SVI_IP2:-10.0.200.1/24}

function setup() {
  ## vrf
  ip link add ${VRF} type vrf table ${VRF_TABLE_ID}
  ip link set ${VRF} up

  ## bridge
  ip link add name ${BRIDGE} type bridge vlan_filtering 1 vlan_default_pvid 0
  ip link set ${BRIDGE} up

  ## portX
  ip link set ${PORTX} master ${BRIDGE}
  bridge vlan add vid ${BR_VLAN} dev ${PORTX}
  ip link set ${PORTX} up

  ## portY
  ip link set ${PORTY} master ${BRIDGE}
  bridge vlan add vid ${BR_VLAN} dev ${PORTY}
  ip link set ${PORTY} up

  ## SVI - swbridge.X
  ip link add link ${BRIDGE} name ${BRIDGE}.${BR_VLAN} type vlan id ${BR_VLAN}
  bridge vlan add vid ${BR_VLAN} dev ${BRIDGE} self
  ip link set ${BRIDGE}.${BR_VLAN} up

  ## SVI - swbridge.Y
  ip link add link ${BRIDGE} name ${BRIDGE}.${BR_VLAN2} type vlan id ${BR_VLAN2}
  bridge vlan add vid ${BR_VLAN2} dev ${BRIDGE} self
  ip link set ${BRIDGE}.${BR_VLAN2} up

  ## SVI - VRF enslavement
  ip link set ${BRIDGE}.${BR_VLAN} vrf ${VRF}
  ip link set ${BRIDGE}.${BR_VLAN2} vrf ${VRF}

  ## IP Address attribution
  ip address add ${SVI_IP} dev ${BRIDGE}.${BR_VLAN}
  ip address add ${SVI_IP2} dev ${BRIDGE}.${BR_VLAN2}
}

function teardown() {
  ip link del ${VRF}
  ip link del ${VRF2}
  ip link del ${VRF3}

  ip link del ${BRIDGE}
}
